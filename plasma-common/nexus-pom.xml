<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
      <groupId>plasma</groupId>
      <artifactId>plasma</artifactId>
      <version>1.1.3</version>
  </parent>
  <groupId>plasma</groupId>
  <artifactId>plasma-common</artifactId>
  <version>1.1.3</version>
  <packaging>jar</packaging>

  <name>Plasma Common</name>
  <description>In its initial releases, the PlasmaSDO™ implementation seeks to address the need for automation and code generation under SDO for standard enterprise Java web applications while focusing on critical operational considerations these applications face, such as optimistic and pessimistic concurrency control. The PlasmaSDO™ implementation is not bound to any integrated development environment (IDE) and provides support for standard Java™ based build tools. Note: Such operational considerations such as optimistic and pessimistic concurrency control are seen as a feature gap within various commercial and open-source SDO offerings, and are facilitated in PlasmaSDO™ by a custom UML profile and various associated SDO API extensions.</description>  
  <licenses>
      <license>
          <name>Plasma License</name>
          <url>https://github.com/terrameta/plasma/LICENSE</url>
          <distribution>repo</distribution>
      </license>
  </licenses>
  <scm>
      <url>https://github.com/terrameta/plasma</url>
      <connection></connection>
  </scm>  
  <developers>
      <developer>
          <id>scinnamond</id>
          <name>Scott Cinnamond</name>
          <email>scinnamond@gmail.com</email>
      </developer>
  </developers>
  
  <properties>
          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <repositories>
      <repository>
          <id>lib</id>
          <name>lib</name>
          <releases>
                  <enabled>true</enabled>
                  <checksumPolicy>ignore</checksumPolicy>
          </releases>
          <snapshots>
                  <enabled>false</enabled>
          </snapshots>
          <url>file://${project.basedir}/lib</url>
      </repository>
	  <repository>
		  <id>maven2-repository.dev.java.net</id>
		  <name>Java.net Maven 2 Repository</name>
		  <url>http://download.java.net/maven/2</url>
	  </repository>
  </repositories>
  <pluginRepositories>                                  
		<pluginRepository>                                
			<id>maven2-repository.dev.java.net</id>       
			<name>Java.net Maven 2 Repository</name>      
			<url>http://download.java.net/maven/2</url>   
		</pluginRepository>                               
  </pluginRepositories>                                 
  
  <dependencies>     
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>3.8.1</version>
	</dependency>
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.8</version>
	</dependency>
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
	</dependency>
	<dependency>
		<groupId>javax.xml.bind</groupId>
		<artifactId>jsr173_api</artifactId>
		<version>1.0</version>
	</dependency>
	<dependency>
		<groupId>javax.xml.bind</groupId>
		<artifactId>jaxb-api</artifactId>
		<version>2.1</version>
	</dependency>
	<dependency>
		<groupId>com.sun.xml.bind</groupId>
		<artifactId>jaxb-impl</artifactId>
		<version>2.1.9</version>
	</dependency>
	<dependency>
		<groupId>com.sun.xml.bind</groupId>
		<artifactId>jaxb-xjc</artifactId>
		<version>2.1.9</version>
	</dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
              <execution>
                  <id>attach-sources</id>
                  <goals>
                      <goal>jar</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
		<executions>
			<execution>
				<phase>install</phase>
				<goals>
					<goal>jar</goal>
				</goals>
			</execution>
		</executions>
        <configuration>
          <author>true</author>
          <show>public</show>
          <nohelp>false</nohelp>
        </configuration>
      </plugin>
      <!-- 
      Note: gpg plugin should be run from cygwin or unix typically
      and note than m2e needs you to set the HOME environment
      variable to point at your maven local repo. So while
      running gpg plugin from eclipse gpg will read the
      HOME variable and look for gpg config stuff there!!       
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--
          Release Plugin (Update version in POM before/after release, create
          tag, deploy) to try: mvn release:prepare -DdryRun=true && mvn
          release:clean to perform:

          mvn release:prepare release:perform

          Read http://nexus.sonatype.org/oss-repository-hosting.html#3 for
          instructions on releasing to this project's Sonatype repository
      -->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.0-beta-7</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
            <execution>
                <id>attach-sources</id>
                <goals>
                    <goal>jar</goal>
                </goals>
            </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>   
    <plugins>                                                                          
      <plugin>                                                                         
        <groupId>org.apache.maven.plugins</groupId>                                    
        <artifactId>maven-javadoc-plugin</artifactId>                                  
        <version>2.8.1</version>                                                       
      </plugin>                                                                        
    </plugins> 
  </reporting>                                                                         
  <distributionManagement> 
      <!-- My project's Sonatype repository to be used by the release plugin -->
      <repository>
          <id>sonatype-nexus-staging-and-release</id>
          <name>Nexus Staging Repository</name>
          <!--
          giving a 400 error
          <url>https://oss.sonatype.org/content/groups/public</url>
          -->
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
      </repository> 
      <snapshotRepository>
         <id>sonatype-nexus-snapshot</id>
         <name>Nexus Snapshot Repository</name>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      </snapshotRepository>
  </distributionManagement>
</project>