//
/**
 *         PlasmaSDO™ License
 * 
 * This is a community release of PlasmaSDO™, a dual-license 
 * Service Data Object (SDO) 2.1 implementation. 
 * This particular copy of the software is released under the 
 * version 2 of the GNU General Public License. PlasmaSDO™ was developed by 
 * TerraMeta Software, Inc.
 * 
 * Copyright (c) 2013, TerraMeta Software, Inc. All rights reserved.
 * 
 * General License information can be found below.
 * 
 * This distribution may include materials developed by third
 * parties. For license and attribution notices for these
 * materials, please refer to the documentation that accompanies
 * this distribution (see the "Licenses for Third-Party Components"
 * appendix) or view the online documentation at 
 * <http://plasma-sdo.org/licenses/>.
 *  
 */
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-661 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.01.01 at 10:40:35 AM EST 
//


package org.plasma.query.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import org.plasma.query.Wildcard;



/**
 * <p>Java class for PathNode complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PathNode">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="pathElement" type="{http://www.terrameta.org/plasma/query}AbstractPathElement"/>
 *         &lt;element ref="{http://www.terrameta.org/plasma/query}Where" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PathNode", propOrder = {
    "pathElement",
    "where"
})
@XmlRootElement(name = "PathNode")
public class PathNode {

    @XmlElementRef // IMPORTANT - maps single container/field to multiple subclass 'ref' elements in XSD choice 
    protected AbstractPathElement pathElement;
    @XmlElement(name = "Where")
    protected Where where;

    
    public PathNode() {    	
    }
    
    public PathNode(String name) {
    	this.pathElement = createPathElement(name);
    }

    /**
     * Gets the value of the pathElement property.
     * 
     * @return
     *     possible object is
     *     {@link AbstractPathElement }
     *     
     */
    public AbstractPathElement getPathElement() {
        return pathElement;
    }

    /**
     * Sets the value of the pathElement property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractPathElement }
     *     
     */
    public void setPathElement(AbstractPathElement value) {
        this.pathElement = value;
    }

    /**
     * Gets the value of the where property.
     * 
     * @return
     *     possible object is
     *     {@link Where }
     *     
     */
    public Where getWhere() {
        return where;
    }

    /**
     * Sets the value of the where property.
     * 
     * @param value
     *     allowed object is
     *     {@link Where }
     *     
     */
    public void setWhere(Where value) {
        this.where = value;
    }
    
    public AbstractPathElement createPathElement(String name) {
        if (!Wildcard.WILDCARD_CHAR.equals(name))
            return new PathElement(name);
        else
            return new WildcardPathElement(name);
    }

}
